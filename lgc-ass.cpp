#include <cstdio>
#include <cstdlib>
#include <cstdint>

// Returns the ith number generated by an LGC.
// 8-bit integers are being used just so the
// algorithm results are closer to what may be
// seen in Ahmes' simulator (e.g. similar errors). 

uint8_t lgc(uint8_t n, uint8_t a, uint8_t b, 
	 uint8_t X0, uint8_t i);

void case_testing();

int main(int argc, char** argv)
{
	uint8_t X0, n, a, b, i;	
	uint8_t Xi;

	/*
	if(argc != 6)
	{
		printf("Incorrect arguments\n");
		printf("Usage: ./lgc <n a b X0 i>\n");
		return EXIT_FAILURE;
	}
	n =	atoi(argv[1]);
	a =	atoi(argv[2]);
	b =	atoi(argv[3]);
	X0 =	atoi(argv[4]);
	i =	atoi(argv[5]);
	*/
	
	//Xi = lgc(X0, n, a, b, i);
	case_testing();
	
	return EXIT_SUCCESS;
}

uint8_t lgc(uint8_t n, uint8_t a, uint8_t b, 
	 uint8_t X0, uint8_t i)
{
	printf("%3u\t %3u\t %3u\t %3u\t %3u\t ", \
	n, a, b, X0, i);	

	uint8_t Xi = X0;

	for(uint8_t count = 0; count < i; ++count)
	{
		Xi = (a * Xi + b) % n;
	}	

	printf("Xi: %u\n", Xi);

	return Xi;
}

void case_testing()
{
	uint8_t res;
	printf("  n\t a\t b\t X0\t i\n");
	res = lgc(11, 6, 7, 0, 4);	
	res = lgc(11, 6, 7, 0, 25);	
	res = lgc(11, 6, 7, 0, 20);	
	res = lgc(13, 2, 2, 7, 8);	
	res = lgc(13, 2, 2, 0, 5);	
	res = lgc(16, 6, 8, 7, 1);	
	res = lgc(16, 6, 8, 7, 4);	
	res = lgc(16, 6, 8, 7, 5);	
	res = lgc(127, 15, 12, 3, 20);	
	res = lgc(127, 15, 12, 3, 33);	
	res = lgc(251, 131, 142, 164, 42);	
	res = lgc(251, 131, 142, 164, 49);	
	res = lgc(251, 131, 142, 1, 49);	

}
